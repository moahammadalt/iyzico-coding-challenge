{"version":3,"sources":["assets/images/back.png","components/not_found.js","components/header.js","components/character_main_card.js","globals/helper.js","containers/home_con.js","components/character_details.js","components/back_button.js","containers/character_details_con.js","App.js","serviceWorker.js","reducers/loading_spinner.js","reducers/selected_character.js","reducers/characters_list.js","reducers/characters_page_number.js","reducers/episodes_limit.js","reducers/scroll_indicator.js","reducers/root.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","NotFound","react_default","a","createElement","className","Header","Link","to","CharacterMainCard","_ref","character","src","image","alt","name","checkValue","value","key","undefined","split","reduce","o","x","test","isObjEmpty","obj","length","Date","hasOwnProperty","call","handleError","err","Alert","error","concat","HomeContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","handleScroll","bind","assertThisInitialized","fetchCharactersData","handleCharacterCardClick","_this2","window","addEventListener","setTimeout","scrollTo","scrollIndicator","charactersList","removeEventListener","_this3","setLoadingSpinnerStatus","getCharacter","page","charactersPageNumber","then","data","setCharacterList","toConsumableArray","results","setCharactersPageNumber","info","next","catch","loadingSpinner","innerHeight","scrollY","refs","homeRef","offsetHeight","setSelectedCharacter","setScrollIndicator","_this4","ref","map","index","onClick","id","character_main_card","Component","connect","state","dispatch","arr","type","payload","val","selectedCharacter","origin","episodesList","episode","BackButton","require","CharacterDetailsContainer","episodesIds","characterDetails","setEpisodesLimit","match","params","getEpisodesIds","getEpisode","Array","objectSpread","_context","t0","slice","episodesLimit","url","pop","back_button","character_details","App","BrowserRouter","Fragment","react_s_alert_default","stack","limit","effect","beep","position","timeout","html","header","Switch","Route","exact","path","component","Boolean","location","hostname","arguments","action","new_state","persistCombineReducers","storage","whitelist","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","main_component","persistStore","es","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7d094a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.fe63ba14.png\";","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div className=\"text-center c-w\">\r\n    <h1>This path is not found</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nconst Header = () => (\r\n  <header className='header'>\r\n    <Link to={`/`}>\r\n      <h1 className=\"logo\">RICK AND MORTY</h1>  \r\n    </Link>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst CharacterMainCard = ({character}) => (\r\n  <div className=\"character-main-card\">\r\n    <img className=\"character-main-img-top rounded\" src={character.image} alt=\"sorry, not available now\" />\r\n    <div className=\"character-name-bottom\">\r\n      <h3 className=\"character-name\">{character.name}</h3>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CharacterMainCard;","import Alert from 'react-s-alert';\r\n\r\n// value checker for falsy customized values (false || null || undefined || '' || {})\r\nexport const checkValue = (value, key) => {\r\n\r\n\tvalue = key ? key.split(\".\").reduce((o, x) => (typeof o == \"undefined\" || o === null) ? o : o[x], value) : value;\r\n\treturn (value === undefined || value === null || (!value && value !== 0 && value !== '0') || value === '' || /^\\s*$/.test(value) || (typeof value === 'object' && isObjEmpty(value))) ? false : true;\r\n};\r\n\r\nexport const isObjEmpty = obj => {\r\n\r\n\tif (obj == null || obj.length === 0 || typeof obj !== \"object\") return true;\r\n\tif (obj.length > 0 || obj instanceof Date) return false;\r\n\tfor (var key in obj) {\r\n\t\tif (hasOwnProperty.call(obj, key)) return false;\r\n\t}\r\n\t\r\n\treturn true;\r\n};\r\n\r\nexport const handleError = err => Alert.error(`${err}`);","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport { getCharacter } from 'rickmortyapi';\r\nimport CharacterMainCard from '../components/character_main_card';\r\nimport { handleError, checkValue } from '../globals/helper';\r\nimport { connect } from 'react-redux';\r\n\r\nclass HomeContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.handleScroll = this.handleScroll.bind(this);\r\n    this.fetchCharactersData = this.fetchCharactersData.bind(this);\r\n    this.handleCharacterCardClick = this.handleCharacterCardClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    window.addEventListener('scroll', this.handleScroll);\r\n    // this is for setting the scroller on the place where it left from\r\n    setTimeout(() => window.scrollTo(0, this.props.scrollIndicator), 0)\r\n\r\n    if(this.props.charactersList.length === 0){ // only fetch character data when the store is empty of character data\r\n      this.fetchCharactersData();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  fetchCharactersData() {\r\n    this.props.setLoadingSpinnerStatus(true);\r\n    getCharacter({ page: this.props.charactersPageNumber }).then(data => {\r\n\r\n      this.props.setCharacterList([...this.props.charactersList, ...data.results]);\r\n      this.props.setCharactersPageNumber(checkValue(data.info.next) ? (this.props.charactersPageNumber + 1) : false);\r\n      this.props.setLoadingSpinnerStatus(false);\r\n\r\n    }).catch(err => handleError(err));\r\n  }\r\n\r\n  handleScroll() {\r\n    // stop handling scroll event when the character data is on loading or if the pageNumber is over in api \r\n    if (!this.props.charactersPageNumber || this.props.loadingSpinner) { return; }\r\n\r\n    if ((window.innerHeight + window.scrollY) >= this.refs.homeRef.offsetHeight) {\r\n      this.fetchCharactersData();\r\n    }\r\n  }\r\n\r\n  handleCharacterCardClick(character) {\r\n    this.props.setSelectedCharacter(character);\r\n    this.props.setScrollIndicator(window.scrollY);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-container\" ref=\"homeRef\">\r\n\r\n        { this.props.loadingSpinner ? <div className=\"loading\"></div> : null }\r\n        \r\n        <div className=\"container p-t-30\">\r\n          {this.props.charactersList.map((character, index) => (\r\n            <div className=\"col-md-3 col-sm-6\" key={index}>\r\n              <Link onClick={() => this.handleCharacterCardClick(character) } to={`/character/${character.id}`} className=\"character-main-card\">\r\n                <CharacterMainCard character={character} />\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        { !this.props.charactersPageNumber ? <h1 className=\"text-center c-w m-b-30\">The End.</h1> : null }\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCharacterList: (arr) => {\r\n      dispatch({\r\n        type: 'SET_CHARACTERS_LIST',\r\n        payload: arr\r\n      });\r\n    },\r\n    setCharactersPageNumber: (val) => {\r\n      dispatch({\r\n        type: 'SET_CHARACTERS_PAGE_NUMBER',\r\n        payload: val\r\n      });\r\n    },\r\n    setSelectedCharacter: (obj) => {\r\n      dispatch({\r\n        type: 'SET_SELECTED_CHARACHATER',\r\n        payload: obj\r\n      });\r\n    },\r\n    setLoadingSpinnerStatus: (val) => {\r\n      dispatch({\r\n        type: 'SET_LOADING_SPINNER_STATUS',\r\n        payload: val\r\n      })\r\n    },\r\n    setScrollIndicator: (val) => {\r\n      dispatch({\r\n        type: 'SET_SCROLL_INDICATOR',\r\n        payload: val\r\n      })\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(state => state, mapDispatchToProps)(HomeContainer);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CharacterDetails = (props) => (\r\n  <div className=\"col-md-11\">\r\n    <div className=\"col-md-6\">\r\n      <img className=\"character-img-left rounded\" src={props.selectedCharacter.image} alt=\"sorry, not available now\" />\r\n    </div>\r\n    <div className=\"col-md-6\">\r\n      <div className=\"character-details-right\">\r\n\r\n        {\r\n          props.selectedCharacter.name &&\r\n          <div className=\"character-detail-field border-bottom row\">\r\n            <label className=\"col-sm-4\">\r\n              NAME:\r\n                  </label>\r\n            <p className=\"col-sm-8\">\r\n              {props.selectedCharacter.name}\r\n            </p>\r\n          </div>\r\n        }\r\n\r\n        {\r\n          props.selectedCharacter.origin &&\r\n          props.selectedCharacter.origin.name &&\r\n          <div className=\"character-detail-field border-bottom row\">\r\n            <label className=\"col-sm-4\">\r\n              ORIGIN:\r\n                  </label>\r\n            <p className=\"col-sm-8\">\r\n              {props.selectedCharacter.origin.name}\r\n            </p>\r\n          </div>\r\n        }\r\n\r\n        {\r\n          props.selectedCharacter.episodesList &&\r\n          props.selectedCharacter.episodesList.length > 0 &&\r\n          <div className=\"character-detail-field border-bottom row\">\r\n            <label className=\"col-sm-4\">\r\n              EPISODES:\r\n                </label>\r\n            <div className=\"col-sm-8\">\r\n              {props.selectedCharacter.episodesList && props.selectedCharacter.episodesList.map((episode, index) => (\r\n                <p key={index}>{episode.name}</p>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default connect(state => state, {})(CharacterDetails);","import React from 'react';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nconst BackButton = ({to}) => (\r\n\r\n  <div className=\"back-btn-container col-md-1\">\r\n    <Link to={to ? to : '/'}>\r\n      <img src={require('../assets/images/back.png')} alt=\"sorry, not available now\" />\r\n    </Link>\r\n  </div>\r\n  \r\n);\r\n\r\nexport default BackButton;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getCharacter, getEpisode } from 'rickmortyapi';\r\nimport CharacterDetails from '../components/character_details';\r\nimport BackButton from '../components/back_button';\r\nimport { handleError, checkValue } from '../globals/helper';\r\n\r\nclass CharacterDetailsContainer extends Component {\r\n\r\n  async componentDidMount() {    \r\n\r\n    let episodesIds = [];\r\n    let episodesList = [];\r\n    let characterDetails = [];\r\n    this.props.setLoadingSpinnerStatus(true);\r\n    this.props.setEpisodesLimit(5);\r\n\r\n    try {\r\n      if(!this.props.selectedCharacter.id){  // get character details when the page is first opened directly from getCharacter api       \r\n  \r\n        characterDetails = await getCharacter([this.props.match.params.id]);\r\n        episodesIds = this.getEpisodesIds(characterDetails); // extract episodes ids from episodes array urls\r\n        episodesList = await getEpisode(episodesIds); // get episodes list from getEpisode api\r\n      }\r\n      else{ // character details are already exist from the previous component (HomeContainer) \r\n        characterDetails = this.props.selectedCharacter;\r\n        episodesIds = this.getEpisodesIds(characterDetails); // extract episodes ids from episodes array urls\r\n        episodesList = await getEpisode(episodesIds); // get episodes list from getEpisode api\r\n      }\r\n\r\n      // here making sure episodesList are always array type variable \r\n      // why checking? because when the episodes are only one item, the api returns an object instead of array\r\n      episodesList = episodesList instanceof Array ? episodesList : [episodesList];\r\n      this.props.setSelectedCharacter({...characterDetails,  episodesList}); // dispatch SET_SELECTED_CHARACHATER action\r\n      this.props.setLoadingSpinnerStatus(false);\r\n    }\r\n    catch(err) {\r\n      handleError(err);\r\n    }\r\n    \r\n  }\r\n\r\n  componentWillUnmount(){\r\n    // make sure that always selectedCharacter reducer is only full of data when the charecter details page is open\r\n    this.props.setSelectedCharacter({}); \r\n  }\r\n\r\n  getEpisodesIds(characterDetails) { // returns an array of ids like [1, 6, 4, etc...]\r\n    if(!checkValue(characterDetails.episode) || !(characterDetails.episode  instanceof Array)){\r\n      return [];\r\n    }\r\n\r\n    return characterDetails.episode.slice(characterDetails.episode.length - this.props.episodesLimit, characterDetails.episode.length).map(url => url.split('/').pop());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"character-container\">\r\n        { this.props.loadingSpinner ? <div className=\"loading\"></div> : null }\r\n        <BackButton to='/' />\r\n        {\r\n          checkValue(this.props.selectedCharacter) &&\r\n          <CharacterDetails />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setSelectedCharacter: (obj) => {\r\n      dispatch({\r\n        type: 'SET_SELECTED_CHARACHATER',\r\n        payload: obj\r\n      });\r\n    },\r\n    setLoadingSpinnerStatus: (val) => {\r\n      dispatch({\r\n        type: 'SET_LOADING_SPINNER_STATUS',\r\n        payload: val\r\n      })\r\n    },\r\n    setEpisodesLimit: (val) => {\r\n      dispatch({\r\n        type: 'SET_EPISODES_LIMIT',\r\n        payload: val\r\n      })\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(state => state, mapDispatchToProps)(CharacterDetailsContainer);","import React, { Component } from 'react';\nimport Alert from 'react-s-alert';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport NotFound from './components/not_found';\nimport Header from './components/header';\nimport HomeContainer from './containers/home_con';\nimport CharacterDetailsContainer from './containers/character_details_con';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"app-container\">\n        \n        <Router>\n          <React.Fragment>\n            <Alert stack={{limit: 1}} effect='slide' beep={false} position='bottom-right' timeout={4000} html={true} />\n            <Header />\n            <React.Fragment>\n              <Switch>\n                <Route exact path=\"/\" component={HomeContainer} />\n                <Route path=\"/character/:id\" component={CharacterDetailsContainer} />\n                <Route path='*' exact={true} component={NotFound} />\n              </Switch>\n            </React.Fragment>\n          </React.Fragment>\n        </Router>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const loadingSpinner = (state = false, action) => {\r\n  let new_state = state;\r\n\r\n  switch (action.type) {\r\n\r\n    case 'SET_LOADING_SPINNER_STATUS':\r\n      new_state = action.payload;\r\n      break;\r\n\r\n    default:\r\n      new_state = state;\r\n  }\r\n  return new_state;\r\n};\r\n\r\nexport default loadingSpinner;","const selectedCharacter = (state = {}, action) => {\r\n  let new_state = { ...state };\r\n\r\n  switch (action.type) {\r\n\r\n    case 'SET_SELECTED_CHARACHATER':\r\n      new_state = { ...action.payload };\r\n      break;\r\n\r\n    default:\r\n      new_state = state;\r\n  }\r\n  return new_state || state;\r\n};\r\n\r\nexport default selectedCharacter;","const charactersList = (state = [], action) => {\r\n  let new_state = [ ...state ];\r\n\r\n  switch (action.type) {\r\n\r\n    case 'SET_CHARACTERS_LIST':\r\n      new_state = [ ...action.payload ];\r\n      break;\r\n\r\n    default:\r\n      new_state = state;\r\n  }\r\n  return new_state;\r\n};\r\n\r\nexport default charactersList;","const charactersPageNumber = (state = 1, action) => {\r\n  let new_state = state;\r\n\r\n  switch (action.type) {\r\n\r\n    case 'SET_CHARACTERS_PAGE_NUMBER':\r\n      new_state = action.payload;\r\n      break;\r\n\r\n    default:\r\n      new_state = state;\r\n  }\r\n  return new_state;\r\n};\r\n\r\nexport default charactersPageNumber;","const episodesLimit = (state = 0, action) => {\r\n  let new_state = state;\r\n\r\n  switch (action.type) {\r\n\r\n    case 'SET_EPISODES_LIMIT':\r\n      new_state = action.payload;\r\n      break;\r\n\r\n    default:\r\n      new_state = state;\r\n  }\r\n  return new_state;\r\n};\r\n\r\nexport default episodesLimit;","const scrollIndicator = (state = 0, action) => {\r\n  let new_state = state;\r\n\r\n  switch (action.type) {\r\n\r\n    case 'SET_SCROLL_INDICATOR':\r\n      new_state = action.payload;\r\n      break;\r\n\r\n    default:\r\n      new_state = state;\r\n  }\r\n  return new_state;\r\n};\r\n\r\nexport default scrollIndicator;","import storage from 'redux-persist/es/storage';\r\nimport { persistCombineReducers } from 'redux-persist';\r\nimport loadingSpinner from './loading_spinner';\r\nimport selectedCharacter from './selected_character';\r\nimport charactersList from './characters_list';\r\nimport charactersPageNumber from './characters_page_number';\r\nimport episodesLimit from './episodes_limit';\r\nimport scrollIndicator from './scroll_indicator'; \r\n\r\nexport default persistCombineReducers({ \r\n\tkey: 'root',\r\n\tstorage,\r\n\twhitelist: []\r\n}, {\r\n\tloadingSpinner,\r\n\tselectedCharacter,\r\n\tcharactersList,\r\n\tcharactersPageNumber,\r\n\tepisodesLimit,\r\n\tscrollIndicator\r\n});","import { createStore, compose } from 'redux';\r\nimport rootReducer from './reducers/root';\r\nimport { persistStore } from 'redux-persist';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(rootReducer, {}, composeEnhancers());\r\nlet persistor = persistStore(store);\r\n\r\n/*// check if the presisit store expiration date is unvalid, clear all the presist store variables (for caching api calls for 1 hour)\r\nif(Number(JSON.parse(window.localStorage.getItem('persist:root')).Reducers_expire) < (Math.floor(Date.now() / 1000))){\r\n\tpersistor.purge();\r\n}*/\r\n\r\nexport { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store';\n\nconst main_component = (\n\t<Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(main_component, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}